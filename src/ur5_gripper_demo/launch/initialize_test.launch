<?xml version="1.0"?>
<launch>
  <arg name="limited" default="true"/>
  <arg name="paused" default="false"/>
  <arg name="gui" default="true"/>
  <arg name="debug" default="false" />
  <arg name="sim" default="true" />

  <!-- startup simulated world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find ur5_gripper_demo)/worlds/warehouse.world"/>
    <!-- <arg name="world_name" default="worlds/empty.world"/> -->
    <arg name="paused" value="$(arg paused)"/>
    <arg name="gui" value="$(arg gui)"/>
  </include>

  <!-- spwan ur5 -->
  <!-- send robot urdf to param server -->
  <include file="$(find ur_description)/launch/ur5_upload.launch">
    <arg name="limited" value="$(arg limited)"/>
  </include>

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model robot -z 1.2" respawn="false" output="screen" />
  <!-- <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model robot -z 1.2 -J ur5_robot::shoulder_lift_joint -1.57 -J ur5_robot::wrist_2_joint -1.57 -unpause" respawn="false" output="screen" /> -->
  <!-- <node name="spawn_gazebo_kinect" pkg="gazebo_ros" type="spawn_model" args="-urdf -file $(find ur_description)/urdf/kinect_world.urdf.xacro -model kinect" respawn="false" output="screen" /> -->
  
  <!-- Kinect camera name. Position and orientation in kinect_properties.urdf.xacro -->
  <arg name="camera_name" default="kinect_camera" />

  <!-- send camera urdf to param server -->
  <param name="kinect_description" command="$(find xacro)/xacro --inorder '$(find ur_description)/urdf/kinect.urdf.xacro'"/>

  <!-- spawn camera in gazebo -->
  <node name="$(arg camera_name)_spawn_urdf" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen" args="-param kinect_description -urdf -model $(arg camera_name)"/>

  <include file="$(find ur_gazebo)/launch/controller_utils.launch"/>
  <rosparam file="$(find ur_gazebo)/controller/arm_controller_ur5.yaml" command="load"/>
  <node name="arm_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn arm_controller" respawn="false" output="screen"/>

  <!-- Remap follow_joint_trajectory -->
  <remap if="$(arg sim)" from="/follow_joint_trajectory" to="/arm_controller/follow_joint_trajectory"/>

  <!-- Launch moveit -->
  <include file="$(find ur5_moveit_config)/launch/move_group.launch">
    <arg name="limited" default="$(arg limited)"/>
    <arg name="debug" default="$(arg debug)" />
  </include>

  <node name="ur5_gripper" pkg="ur5_gripper_demo" type="ur5_gripper.py" output="screen"/>
  <!-- <node name="ur5_mp" pkg="ur5_gripper_demo" type="ur5_pick_and_place.py" output="screen"/> -->

  <!-- Spawn GUI-->
  <node name="rqt_gui" pkg="rqt_gui" type="rqt_gui" respawn="false" output="screen" args="--perspective-file $(find rqt_industrial_robot)/ur5_vacuum_gripper_camera.perspective"/>


  <!-- launch rviz to check TF data -->
  <node type="rviz" name="rviz" pkg="rviz" args="-d $(find ur5_gripper_demo)/rviz/ur5.rviz" />

</launch>
